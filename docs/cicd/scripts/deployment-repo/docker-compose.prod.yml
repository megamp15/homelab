name: homelab-prod

services:
  frontend-prod:
    image: ${REGISTRY}/frontend:prod
    container_name: frontend-prod
    restart: unless-stopped
    ports:
      - "80:80"
    networks:
      - app-network-prod
    depends_on:
      - api-prod
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  api-prod:
    image: ${REGISTRY}/api:prod
    container_name: api-prod
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DB_HOST=postgres-prod
      - DB_PORT=5432
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_NAME=app_prod
    networks:
      - app-network-prod
    depends_on:
      - postgres-prod
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G

  backend-prod:
    image: ${REGISTRY}/backend:prod
    container_name: backend-prod
    restart: unless-stopped
    ports:
      - "4000:4000"
    environment:
      - PYTHON_ENV=production
      - DB_HOST=postgres-prod
      - DB_PORT=5432
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_NAME=app_prod
    networks:
      - app-network-prod
    depends_on:
      - postgres-prod
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G

  postgres-prod:
    image: postgres:14-alpine
    container_name: postgres-prod
    restart: unless-stopped
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=app_prod
    ports:
      - "5432:5432"
    networks:
      - app-network-prod
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G

networks:
  app-network-prod:
    driver: bridge

volumes:
  postgres_data_prod: 